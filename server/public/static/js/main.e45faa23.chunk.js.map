{"version":3,"sources":["js/FileList.js","js/FolderList.js","App.js","index.js"],"names":["FileList","className","this","props","files","map","file","folder","key","filename","React","Component","File","href","download","style","wordWrap","FolderList","state","searchResult","searchQuery","handleSearch","ev","persist","setState","folders","filter","includes","target","value","toUpperCase","type","placeholder","onChange","maxHeight","overflowY","overflowX","padding","name","updateCurrent","Folder","onClick","App","s3Files","current","context","get","then","res","data","Object","keys","bind","ReactDOM","render","document","getElementById"],"mappings":"iVAGqBA,G,6LACR,IAAD,OACR,OACE,yBAAKC,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACZC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMC,OAAQ,EAAKJ,MAAMI,OAAQC,IAAKF,EAAMG,SAAUH,e,GAP5DI,IAAMC,YAgBtCC,E,iLAEF,OACE,yBAAKX,UAAU,QACb,uBAAGY,KAAI,wCAAmCX,KAAKC,MAAMI,OAA9C,YAAwDL,KAAKC,MAAMM,UAAYK,UAAQ,GAC5F,0BAAMb,UAAU,WAChB,yBAAKA,UAAU,YAAYc,MAAO,CAAEC,SAAU,eAC3Cd,KAAKC,MAAMM,gB,GAPLC,IAAMC,WCfJM,G,2OACnBC,MAAM,CAAEC,aAAc,GAAIC,YAAa,I,EAEvCC,aAAe,SAACC,GACdA,EAAGC,UACH,EAAKC,SAAS,CACZL,aAAc,EAAKhB,MAAMsB,QAAQC,QAAO,SAAAnB,GAAM,OAAIA,EAAOoB,SAASL,EAAGM,OAAOC,MAAMC,kBAClFV,YAAaE,EAAGM,OAAOC,S,0EAIhB,IAAD,OACR,OACE,yBACE5B,UAAU,YAEV,yBAAKA,UAAU,UACb,2BAAO8B,KAAK,OAAO9B,UAAU,aAAa+B,YAAY,4BAA4BC,SAAU/B,KAAKmB,gBAEnG,yBACEpB,UAAU,uBAAuBc,MAAO,CACtCmB,UAAW,OACXC,UAAW,SACXC,UAAW,WAGb,yBAAKnC,UAAU,gBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcc,MAAO,CAAEsB,QAAS,IAChB,KAA3BnC,KAAKgB,MAAME,YACRlB,KAAKgB,MAAMC,aAAad,KAAI,SAAAE,GAAM,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAQ+B,KAAM/B,EAAQgC,cAAe,EAAKpC,MAAMoC,mBACnGrC,KAAKC,MAAMsB,QAAQpB,KAAI,SAAAE,GAAM,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAQ+B,KAAM/B,EAAQgC,cAAe,EAAKpC,MAAMoC,oBAEpG,yBAAKtC,UAAU,qB,GAjCWS,IAAMC,YA0CxC6B,E,iLACO,IAAD,OACR,OACE,wBAAIC,QAAS,kBAAM,EAAKtC,MAAMoC,cAAc,EAAKpC,MAAMmC,QAAO,2BAAG,uBAAGrC,UAAU,iBAAkBC,KAAKC,MAAMmC,W,GAH5F5B,IAAMC,W,QCtCN+B,E,+NACnBxB,MAAQ,CAAEyB,QAAS,GAAIC,QAAS,I,+EAEjBA,GACb1C,KAAKsB,SAAS,CAAEoB,QAASA,M,0CAIzB,IAAMC,EAAU3C,KAChB4C,cAAI,aAAaC,MAAK,SAAAC,GAAG,OAAIH,EAAQrB,SAAS,CAAEmB,QAASK,EAAIC,Y,+BAI7D,OACE,oCACE,kBAAC,EAAD,CAAYxB,QAASyB,OAAOC,KAAKjD,KAAKgB,MAAMyB,SAAUJ,cAAerC,KAAKqC,cAAca,KAAKlD,QAC7F,kBAAC,EAAD,CAAUK,OAAQL,KAAKgB,MAAM0B,QAASxC,MAAOF,KAAKgB,MAAMyB,QAAQzC,KAAKgB,MAAM0B,UAAY,U,GAhB9DlC,IAAMC,WCDvC0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e45faa23.chunk.js","sourcesContent":["import React from 'React'\r\nimport '../css/File.css'\r\n\r\nexport default class FileList extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='col-md-8 animated fadeInRight'>\r\n        <div className='row'>\r\n          <div className='col-lg-12'>\r\n            <div className='file-box'>\r\n              {this.props.files.map(file => <File folder={this.props.folder} key={file} filename={file} />)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass File extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='file'>\r\n        <a href={`https://helix.squid-proxy.xyz/${this.props.folder}/${this.props.filename}`} download>\r\n          <span className='corner' />\r\n          <div className='file-name' style={{ wordWrap: 'break-word' }}>\r\n            {this.props.filename}\r\n          </div>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/* </div> <div className=\"file-box\">\r\n              <div className=\"file\">\r\n                <a href=\"#\">\r\n                  <span className=\"corner\"></span>\r\n\r\n                  <div className=\"image\">\r\n                    <img alt=\"image\" className=\"img-responsive\" src=\"http://lorempixel.com/400/300/nature/1\">\r\n                  </div>\r\n                  <div className=\"file-name\">\r\n                    Italy street.jpg\r\n                    <br>\r\n                    <small>Added: Jan 6, 2014</small>\r\n                  </div>\r\n                </a>\r\n\r\n              </div>\r\n            </div> */\r\n","import React from 'React'\r\nimport '../css/Search.css'\r\nimport '../css/Folder.css'\r\n\r\nexport default class FolderList extends React.Component {\r\n  state={ searchResult: [], searchQuery: '' }\r\n\r\n  handleSearch = (ev) => {\r\n    ev.persist()\r\n    this.setState({\r\n      searchResult: this.props.folders.filter(folder => folder.includes(ev.target.value.toUpperCase())),\r\n      searchQuery: ev.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div\r\n        className='col-md-4'\r\n      >\r\n        <div className='search'>\r\n          <input type='text' className='searchTerm' placeholder='What are you looking for?' onChange={this.handleSearch} />\r\n        </div>\r\n        <div\r\n          className='ibox float-e-margins' style={{\r\n            maxHeight: '85vh',\r\n            overflowY: 'scroll',\r\n            overflowX: 'hidden'\r\n          }}\r\n        >\r\n          <div className='ibox-content'>\r\n            <div className='file-manager'>\r\n              <ul className='folder-list' style={{ padding: 0 }}>\r\n                {this.state.searchQuery !== ''\r\n                  ? this.state.searchResult.map(folder => <Folder key={folder} name={folder} updateCurrent={this.props.updateCurrent} />)\r\n                  : this.props.folders.map(folder => <Folder key={folder} name={folder} updateCurrent={this.props.updateCurrent} />)}\r\n              </ul>\r\n              <div className='clearfix' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Folder extends React.Component {\r\n  render () {\r\n    return (\r\n      <li onClick={() => this.props.updateCurrent(this.props.name)}><a><i className='fa fa-folder' />{this.props.name}</a></li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport './css/App.css'\n\nimport FileList from './js/FileList'\nimport FolderList from './js/FolderList'\n\nimport { get } from 'axios'\n\nexport default class App extends React.Component {\n  state = { s3Files: {}, current: '' }\n\n  updateCurrent (current) {\n    this.setState({ current: current })\n  }\n\n  componentDidMount () {\n    const context = this\n    get('api/files').then(res => context.setState({ s3Files: res.data }))\n  }\n\n  render () {\n    return (\n      <>\n        <FolderList folders={Object.keys(this.state.s3Files)} updateCurrent={this.updateCurrent.bind(this)} />\n        <FileList folder={this.state.current} files={this.state.s3Files[this.state.current] || []} />\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './css/index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}